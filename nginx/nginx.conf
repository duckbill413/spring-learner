user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    upstream springboot { # api는 arbitrary.
        server learner-api:8080; # docker-compose.yml에서 올라가는 컨테이너명으로 작성.
        keepalive 1024;
    }

    server {
        listen 80;
        server_name learner.com; # 발급한 도메인 주소
        server_tokens off;

        # 모든 http(80포트) 요청을 https로 리다이렉팅
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name learner.com;
        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/learner.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/learner.com/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        # front url router
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;

            proxy_set_header    Host                $http_host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        }

        # back url router
        location ~ ^/(api|oauth2|login/oauth2) {
            proxy_pass  http://springboot;
            proxy_set_header    Host                $http_host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        }

        # back swagger url router
        location ~ ^/(swagger|webjars|configuration|swagger-resources|v2|csrf) {
                   proxy_pass http://springboot;
                   proxy_set_header Host $host;
                   proxy_set_header X-Real-IP $remote_addr;
                   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                   proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    log_format timed_combined '$remote_addr - $remote_user [$time_local] '
            '"$request" $status $body_bytes_sent '
            '"$http_referer" "$http_user_agent" '
            'rt $request_time urt $upstream_response_time';

    access_log /var/log/nginx/access.log timed_combined;

    sendfile        on;
    keepalive_timeout  65;
}